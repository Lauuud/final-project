{"files":[{"id":"9b00f275-f490-4634-99e2-d8045ce55619","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Asia/Hong_Kong\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"747bfb80-0042-4498-95e0-a65a5b3cf48d","name":"Code","type":"server_js","source":"function main() {\n\n  \n  const months_ago \u003d Utilities.formatDate(两个月前的date(), \"GMT+8\", \"MM/dd/yyyy\");\n\n  const fromfileID \u003d \u002715JW4SF20GDr0FiY1WZM3jXSS1zGTBzkP_ghIh5Thrxo\u0027;\n  const 库存sheet \u003d \u0027产品\u0027;\n  const 初始库存column \u003d \u0027B2:B200\u0027;\n  const 当前库存column \u003d \"E2:E200\";\n  \n  // 复制 入库line，出库cart，出库line和每日收入的数据到历史文件，再删除数据\n  const tofileID \u003d \u00271LRO1lHrNrOVspF_8khV93ZNRZ4m1-2zXg433rbZgXxk\u0027;\n  const 入库linesheet \u003d \u0027入库line\u0027;\n  const 调货linesheet \u003d \u0027调货line\u0027;\n  const 出库linesheet \u003d \u0027出库line\u0027;\n  const 每日收入sheet \u003d \u0027每日收入\u0027;\n\n\n  // 将30天以前的数据去formula (用的是只保留最后30 rows的formula，以上的都变成values)\n  改变每日收入(fromfileID, 每日收入sheet);\n\n  // 将库存的现在值复制到库存初始值\n  改变库存(fromfileID, 库存sheet, 初始库存column, 当前库存column);\n\n  // 将\u0027两个月前\u0027的各个单号复制到 database中，并 delete the row\n  剪切单号(fromfileID, 入库linesheet, tofileID, months_ago);\n  剪切单号(fromfileID, 调货linesheet, tofileID, months_ago);\n  剪切单号(fromfileID, 出库linesheet, tofileID, months_ago);\n  \n}\n\n\nfunction 两个月前的date() {\n  var today \u003d new Date();\n  var 两个个月前date \u003d new Date(new Date().setDate(today.getDate() - 60));\n  return 两个个月前date;\n}\n\n\nfunction 改变每日收入(fromfileID, 每日收入sheet) {\n  \n  var sheet \u003d SpreadsheetApp.openById(fromfileID).getSheetByName(每日收入sheet);\n  const row_length \u003d sheet.getLastRow();\n  const column_length \u003d sheet.getLastColumn();\n  if (row_length-30\u003e0) {\n    //提取30天以前的数据\n    // 2是 header后面的 row开始，1是 1st column，row_length-30\n    var data \u003d sheet.getRange(2, 1, row_length-30, column_length).getValues();\n    sheet.getRange(2, 1, row_length-30, column_length).setValues(data);\n    \n  }\n}\n\n\nfunction 改变库存(fromfileID, sheet, tocolumn, fromcolumn) {\n\n  var 库存sheet \u003d SpreadsheetApp.openById(fromfileID).getSheetByName(sheet);\n  values \u003d 库存sheet.getRange(fromcolumn).getValues();\n  库存sheet.getRange(tocolumn).setValues(values);\n\n}\n\n\nfunction 剪切单号(fromfileID, sheet, tofileID, month_ago_date){\n\n  var fromsheet \u003d SpreadsheetApp.openById(fromfileID).getSheetByName(sheet);\n  var tosheet \u003d SpreadsheetApp.openById(tofileID).getSheetByName(sheet);\n\n  //先把所有的 past/new的 value改成 past\n  const pastnew_index \u003d get_column_index(fromsheet, \u0027past/new\u0027);\n  if (fromsheet.getLastRow() \u003e\u003d 2) {\n    fromsheet.getRange(2, pastnew_index+1, fromsheet.getLastRow()-1, 1).setValue(\"past\");\n  }\n\n  // 提取 month-ago的 data\n  const 日期_index \u003d get_column_index(fromsheet, \u0027日期\u0027);\n  \n  // 选出所有 data\n  var data \u003d fromsheet.getDataRange().getValues();\n  \n  \n  // 记录需要移植的 row index\n  var rows_index \u003d [];\n  // 每行 for-loop，i\u003d1 是从 header以后开始\n  for (let i\u003d1; i \u003c data.length; i++) {\n    // 如果format 空白值，会变成1/1/1970\n    if(data[i][日期_index] !\u003d \"\") {\n      var formated_date \u003d Utilities.formatDate(new Date(data[i][日期_index]), \"GMT+8\", \"MM/dd/yyyy\");\n      // 比较 data值\n      if (formated_date \u003c month_ago_date) {\n        // 因为 data[i]是 1d，需要用下面方式转换成 2d，get values, 然后 set values\n        var data_row \u003d fromsheet.getRange(i+1, 1, 1, fromsheet.getLastColumn()).getValues();\n        tosheet.getRange(tosheet.getLastRow()+1, 1, 1, tosheet.getLastColumn()).setValues(data_row);\n\n        // 不能直接删，因为会改变 index。用unshift，可以从前面插入new i，从后往前删除 rows，不会改变后面的 index对应 rows的关系\n        rows_index.unshift(i);\n      }\n    }\n  }\n  // 删除fromsheet中的rows,从后往前删，删除第 i+1行，一行,\n\n  for (let x in rows_index) {\n    fromsheet.deleteRows(rows_index[x]+1, 1);\n  }\n  \n}\n\nfunction get_column_index(sheet, columname) {\n  var headers \u003d sheet.getRange(1,1,1,sheet.getLastColumn()).getValues()[0]\n  \n  for (let i\u003d0; i\u003cheaders.length; i++) {\n    if (headers[i] \u003d\u003d columname) {\n      return i;\n    }\n    \n  }\n}"}]}